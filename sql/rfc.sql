 -- rcf1: hisotio de servicios viajes de un servicio 
SELECT v.ID, v.FECHA_SALIDA, v.FECHA_LLEGADA, v.DISTANCIA_KM, v.PRECIO, v.ESTADO,
s.TIPO, s.NIVEL,
ve.PLACA, ve.MARCA, ve.MODELO,
c.ID AS CONDUCTOR_ID, u.NOMBRE AS CONDUCTOR_NOMBRE,
po.DIRECCION AS ORIGEN_DIR, pd.DIRECCION AS DESTINO_DIR
FROM VIAJE v
JOIN SERVICIO s ON s.ID = v.SERVICIO_ID
JOIN VEHICULO ve ON ve.ID = v.VEHICULO_ID
JOIN USUARIO_CONDUCTOR c ON c.ID = v.CONDUCTOR_ID
JOIN USUARIO u ON u.ID = c.ID
JOIN PUNTO_GEOGRAFICO po ON po.ID = v.ORIGEN_ID
JOIN PUNTO_GEOGRAFICO pd ON pd.ID = v.DESTINO_ID
WHERE v.USUARIO_SERVICIO_ID = :usuarioServicioId
ORDER BY v.FECHA_SALIDA DESC;


-- RFC2: Top 20 conductores con más servicios
SELECT u.ID AS CONDUCTOR_ID, usun.NOMBRE, COUNT(*) AS TOTAL_SERVICIOS
FROM VIAJE u
JOIN USUARIO_CONDUCTOR uc ON uc.ID = u.CONDUCTOR_ID
JOIN USUARIO usun ON usun.ID = uc.ID
WHERE u.ESTADO = 'FINALIZADO'
GROUP BY u.CONDUCTOR_ID, usun.NOMBRE
ORDER BY TOTAL_SERVICIOS DESC
FETCH FIRST 20 ROWS ONLY;


-- RFC3: Total dinero obtenido por conductor por vehículo y por servicio
-- (60% para el conductor)
SELECT v.CONDUCTOR_ID,
ve.ID AS VEHICULO_ID,
s.ID AS SERVICIO_ID,
s.TIPO, s.NIVEL,
SUM(NVL(v.PRECIO,0) * 0.6) AS TOTAL_CONDUCTOR
FROM VIAJE v
JOIN VEHICULO ve ON ve.ID = v.VEHICULO_ID
LEFT JOIN SERVICIO s ON s.ID = v.SERVICIO_ID
WHERE v.ESTADO = 'FINALIZADO'
GROUP BY v.CONDUCTOR_ID, ve.ID, s.ID, s.TIPO, s.NIVEL
ORDER BY v.CONDUCTOR_ID, ve.ID;


-- RFC4: Utilización de servicios en una ciudad y rango de fechas
-- :ciudadId, :desde (timestamp), :hasta (timestamp)
WITH base AS (
SELECT s.TIPO, s.NIVEL, COUNT(*) AS CNT
FROM VIAJE v
JOIN SERVICIO s ON s.ID = v.SERVICIO_ID
JOIN PUNTO_GEOGRAFICO p ON p.ID = v.ORIGEN_ID
WHERE v.FECHA_SALIDA >= :desde AND v.FECHA_SALIDA < :hasta
AND p.CIUDAD_ID = :ciudadId
GROUP BY s.TIPO, s.NIVEL
)
SELECT b.TIPO, b.NIVEL, b.CNT,
ROUND( (b.CNT / SUM(b.CNT) OVER()) * 100, 2) AS PORCENTAJE
FROM base b
ORDER BY b.CNT DESC;